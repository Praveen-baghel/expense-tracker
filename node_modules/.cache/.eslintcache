[{"/home/salazar/workspace/expence-tracker/src/index.js":"1","/home/salazar/workspace/expence-tracker/src/reportWebVitals.js":"2","/home/salazar/workspace/expence-tracker/src/App.js":"3","/home/salazar/workspace/expence-tracker/src/components/FileUpload.js":"4","/home/salazar/workspace/expence-tracker/src/components/Modal/ErrorModal.js":"5","/home/salazar/workspace/expence-tracker/src/components/ExpenseItem.js":"6","/home/salazar/workspace/expence-tracker/src/components/ExpenseFilter.js":"7","/home/salazar/workspace/expence-tracker/src/components/ExpenseForm.js":"8","/home/salazar/workspace/expence-tracker/src/components/Card.js":"9","/home/salazar/workspace/expence-tracker/src/components/Chart/Chart.js":"10","/home/salazar/workspace/expence-tracker/src/components/ExpenseDate.js":"11","/home/salazar/workspace/expence-tracker/src/components/Chart/ChartBar.js":"12"},{"size":699,"mtime":1690798827652,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1690372514187,"results":"15","hashOfConfig":"14"},{"size":1836,"mtime":1690787225565,"results":"16","hashOfConfig":"14"},{"size":548,"mtime":1690454855890,"results":"17","hashOfConfig":"14"},{"size":857,"mtime":1690886227109,"results":"18","hashOfConfig":"14"},{"size":366,"mtime":1690876888194,"results":"19","hashOfConfig":"14"},{"size":661,"mtime":1690786971105,"results":"20","hashOfConfig":"14"},{"size":2942,"mtime":1690957021409,"results":"21","hashOfConfig":"14"},{"size":192,"mtime":1690785991200,"results":"22","hashOfConfig":"14"},{"size":1830,"mtime":1690786120751,"results":"23","hashOfConfig":"14"},{"size":374,"mtime":1690537052410,"results":"24","hashOfConfig":"14"},{"size":496,"mtime":1690801200096,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"z62f5y",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/salazar/workspace/expence-tracker/src/index.js",["67","68"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport FileUpload from './components/FileUpload';\nimport { ErrorModal } from './components/Modal/ErrorModal';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    {/* <ErrorModal /> */}\n    {/* <FileUpload /> */}\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/salazar/workspace/expence-tracker/src/reportWebVitals.js",[],[],"/home/salazar/workspace/expence-tracker/src/App.js",["69"],[],"import logo from \"./logo.svg\";\n\nimport ExpenseItem from \"./components/ExpenseItem\";\nimport { Card } from \"./components/Card\";\nimport { ExpenseForm } from \"./components/ExpenseForm\";\nimport { useEffect, useState } from \"react\";\nimport { ExpenseFilter } from \"./components/ExpenseFilter\";\nimport { Chart } from \"./components/Chart/Chart\";\n\nconst getExpenses = () => {\n  const lists = JSON.parse(localStorage.getItem(\"expenses\"));\n  if (lists) {\n    return lists;\n  }\n  return [];\n};\n\nfunction App() {\n  const [expenses, setExpenses] = useState(getExpenses());\n  const [year, setYear] = useState(\"all\");\n  // const [filteredItems, setFilteredItems] = useState(getExpenses);\n  const func1 = (expenseData) => {\n    const data = { ...expenseData, id: Math.random().toString() };\n    setExpenses((prevState) => {\n      if (prevState) {\n        return [...prevState, data];\n      } else {\n        return [data];\n      }\n    });\n  };\n  const handleYearChange = (year) => {\n    setYear(year);\n  };\n  let filteredItems = [];\n  if (year === \"all\") {\n    filteredItems = expenses;\n  } else {\n    filteredItems = expenses.filter((item) => {\n      const date = new Date(item.date);\n      return date.getFullYear() === parseInt(year);\n    });\n  }\n\n  let filteredExpenses = (\n    <h2 style={{ textAlign: \"center\" }}>No Expenses Found!</h2>\n  );\n  if (filteredItems.length > 0) {\n    filteredExpenses = filteredItems.map((prod) => {\n      return <ExpenseItem key={prod.id} prod={prod} />;\n    });\n  }\n  useEffect(() => {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n  return (\n    <>\n      <ExpenseForm onApp={func1} />\n      <Card>\n        <ExpenseFilter handleYearChange={handleYearChange} />\n        <Chart dataPoints={filteredItems} />\n        {filteredExpenses}\n      </Card>\n    </>\n  );\n}\n\nexport default App;\n","/home/salazar/workspace/expence-tracker/src/components/FileUpload.js",[],[],"/home/salazar/workspace/expence-tracker/src/components/Modal/ErrorModal.js",[],[],"/home/salazar/workspace/expence-tracker/src/components/ExpenseItem.js",[],[],"/home/salazar/workspace/expence-tracker/src/components/ExpenseFilter.js",["70"],[],"import React, { useState } from \"react\";\nimport styles from \"./ExpenseFilter.module.css\";\n\nexport const ExpenseFilter = (props) => {\n  const handleYearChange = (e) => {\n    props.handleYearChange(e.target.value);\n  };\n  return (\n    <>\n      <div className={styles.filterMain}>\n        <h2>Filter by year</h2>\n        <select onChange={handleYearChange}>\n          <option key=\"all\" value=\"all\">\n            All\n          </option>\n          {Array.from({ length: 2025 - 2019 }, (_, index) => (\n            <option key={index} value={2019 + index}>\n              {2019 + index}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n};\n","/home/salazar/workspace/expence-tracker/src/components/ExpenseForm.js",["71","72","73"],[],"import React, { useRef, useState } from \"react\";\nimport styles from \"./ExpenseForm.module.css\";\nimport { ErrorModal } from \"./Modal/ErrorModal\";\nexport const ExpenseForm = (props) => {\n  //   const [data, setData] = useState({\n  //     title: \"\",\n  //     amount: \"\",\n  //     date: \"\",\n  //   });\n  const inputRef = useRef();\n  const amountRef = useRef();\n  const dateRef = useRef();\n  // const [title, setTitle] = useState(\"\");\n  // const [amount, setAmount] = useState(\"\");\n  // const [date, setDate] = useState(\"\");\n  const [error, setError] = useState();\n  // const titleHandler = (event) => {\n  //   setTitle(event.target.value);\n  //   // setData((prevState) => {\n  //   //   return { ...prevState, title: event.target.value };\n  //   // });\n  // };\n  // const amountHandler = (event) => {\n  //   setAmount(event.target.value);\n  //   // setData((prevState) => {\n  //   //   return { ...prevState, amount: event.target.value };\n  //   // });\n  // };\n  // const dateHandler = (event) => {\n  //   setDate(event.target.value);\n  //   // setData((prevState) => {\n  //   //   return { ...prevState, date: event.target.value };\n  //   // });\n  // };\n  const formHandler = (event) => {\n    event.preventDefault();\n    if (\n      inputRef.current.value.trim().length == 0 ||\n      amountRef.current.value.trim().length == 0 ||\n      dateRef.current.value.length == 0\n    ) {\n      setError({\n        title: \"Invalid Input\",\n        message: \"Please enter valid title, amount and date\",\n      });\n      return;\n    }\n    if (amountRef.current.value < 0) {\n      setError({\n        title: \"Invalid Amount\",\n        message: \"Please enter valid amount(>0)\",\n      });\n      return;\n    }\n    const expenses = {\n      title: inputRef.current.value,\n      amount: amountRef.current.value,\n      date: new Date(dateRef.current.value),\n    };\n    props.onApp(expenses);\n    inputRef.current.value = \"\";\n    amountRef.current.value = \"\";\n    dateRef.current.value = \"\";\n  };\n  const deleteError = () => {\n    setError(null);\n  };\n  return (\n    <>\n      {error && <ErrorModal obj={error} deleteError={deleteError} />}\n      <div className={styles.form}>\n        <form onSubmit={formHandler}>\n          <div className={styles.title}>\n            <label>Title:</label>\n            <br></br>\n            <input type=\"text\" ref={inputRef}></input>\n          </div>\n\n          <div className={styles.amount}>\n            <label>Amount:</label>\n            <br></br>\n            <input type=\"number\" ref={amountRef}></input>\n          </div>\n\n          <div className={styles.date}>\n            <label>Date:</label>\n            <br></br>\n            <input\n              type=\"date\"\n              max=\"2025-12-31\"\n              min=\"2020-01-01\"\n              ref={dateRef}\n            ></input>\n          </div>\n          <button type=\"submit\" className={styles.btn}>\n            Add Expense\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n","/home/salazar/workspace/expence-tracker/src/components/Card.js",["74"],[],"import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nexport const Card = (props) => {\n  const classes = \"card\";\n  return <div className={styles.card}>{props.children}</div>;\n};\n","/home/salazar/workspace/expence-tracker/src/components/Chart/Chart.js",[],[],"/home/salazar/workspace/expence-tracker/src/components/ExpenseDate.js",[],[],"/home/salazar/workspace/expence-tracker/src/components/Chart/ChartBar.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":38,"column":44,"nodeType":"84","messageId":"85","endLine":38,"endColumn":46},{"ruleId":"82","severity":1,"message":"83","line":39,"column":45,"nodeType":"84","messageId":"85","endLine":39,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":40,"column":36,"nodeType":"84","messageId":"85","endLine":40,"endColumn":38},{"ruleId":"75","severity":1,"message":"86","line":5,"column":9,"nodeType":"77","messageId":"78","endLine":5,"endColumn":16},"no-unused-vars","'FileUpload' is defined but never used.","Identifier","unusedVar","'ErrorModal' is defined but never used.","'logo' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'classes' is assigned a value but never used."]